// 3rd Eye Scene macros
// This file disables all 3rd Eye Scene macros. To be used when the library is not available.

#ifndef _3ESSERVERMACROS_H
#define _3ESSERVERMACROS_H

namespace tes
{
  inline void noopohm() {}
}  // namespace tes

#define TES_STMT(statement) tes::noopohm()
#define TES_IF(condition) if (false)
#define TES_RGB(r, g, b) tes::noopohm()
#define TES_RGBA(r, g, b, a) tes::noopohm()
#define TES_COLOUR(name) tes::noopohm()
#define TES_COLOUR_I(index) tes::noopohm()
#define TES_COLOUR_A(name, a) tes::noopohm()
#define TES_BUFFER(...) tes::noopohm()

#define TES_CATEGORY(server, ...) tes::noopohm()
#define TES_SERVER_DECL(server) tes::noopohm()
#define TES_SETTINGS(server, ...) tes::noopohm()
#define TES_SERVER_INFO(server, ...) tes::noopohm()
#define TES_SERVER_INFO_TIME(server, ...) tes::noopohm()
#define TES_SERVER_CREATE(server, ...) tes::noopohm()
#define TES_SERVER_START(server, ...) tes::noopohm()
#define TES_SERVER_START_WAIT(server, ...) tes::noopohm()
#define TES_SET_CONNECTION_CALLBACK(...) tes::noopohm()
#define TES_SERVER_UPDATE(server, ...) tes::noopohm()
#define TES_SERVER_STOP(server) tes::noopohm()
#define TES_LOCAL_FILE_STREAM(server, ...) tes::noopohm()
#define TES_ACTIVE(server) false
#define TES_SET_ACTIVE(server, ...) tes::noopohm()

#define TES_FEATURE(feature) false
#define TES_FEATURE_FLAG(feature) 0
#define TES_FEATURES(featureFlags) tes::noopohm()
#define TES_IF_FEATURES(featureFlags, ...) tes::noopohm()

#define TES_REFERENCE_RESOURCE(server, ...) tes::noopohm()
#define TES_RELEASE_RESOURCE(server, ...) tes::noopohm()
#define TES_MESH_PLACEHOLDER(id) tes::noopohm()

#define TES_ARROW(server, ...) tes::noopohm()
#define TES_ARROW_T(server, ...) tes::noopohm()
#define TES_ARROW_W(server, ...) tes::noopohm()
#define TES_BOX_AABB(server, ...) tes::noopohm()
#define TES_BOX_AABB_T(server, ...) tes::noopohm()
#define TES_BOX_AABB_W(server, ...) tes::noopohm()
#define TES_BOX(server, ...) tes::noopohm()
#define TES_BOX_T(server, ...) tes::noopohm()
#define TES_BOX_W(server, ...) tes::noopohm()
#define TES_CAPSULE(server, ...) tes::noopohm()
#define TES_CAPSULE_T(server, ...) tes::noopohm()
#define TES_CAPSULE_W(server, ...) tes::noopohm()
#define TES_CONE(server, ...) tes::noopohm()
#define TES_CONE_T(server, ...) tes::noopohm()
#define TES_CONE_W(server, ...) tes::noopohm()
#define TES_CYLINDER(server, ...) tes::noopohm()
#define TES_CYLINDER_T(server, ...) tes::noopohm()
#define TES_CYLINDER_W(server, ...) tes::noopohm()
#define TES_LINES(server, ...) tes::noopohm()
#define TES_LINES_E(server, ...) tes::noopohm()
#define TES_LINE(server, ...) tes::noopohm()
#define TES_MESHSET(server, ...) tes::noopohm()
#define TES_PLANE(server, ...) tes::noopohm()
#define TES_PLANE_T(server, ...) tes::noopohm()
#define TES_PLANE_W(server, ...) tes::noopohm()
#define TES_POINTCLOUDSHAPE(server, ...) tes::noopohm()
#define TES_POINTS(server, ...) tes::noopohm()
#define TES_POINTS_C(server, ...) tes::noopohm()
#define TES_POINTS_E(server, ...) tes::noopohm()
#define TES_POSE(server, ...) tes::noopohm()
#define TES_POSE_T(server, ...) tes::noopohm()
#define TES_POSE_W(server, ...) tes::noopohm()
#define TES_SPHERE(server, ...) tes::noopohm()
#define TES_SPHERE_T(server, ...) tes::noopohm()
#define TES_SPHERE_W(server, ...) tes::noopohm()
#define TES_STAR(server, ...) tes::noopohm()
#define TES_STAR_T(server, ...) tes::noopohm()
#define TES_STAR_W(server, ...) tes::noopohm()
#define TES_TEXT2D_SCREEN(server, ...) tes::noopohm()
#define TES_TEXT2D_WORLD(server, ...) tes::noopohm()
#define TES_TEXT3D(server, ...) tes::noopohm()
#define TES_TEXT3D_FACING(server, ...) tes::noopohm()
#define TES_TRIANGLES(server, ...) tes::noopohm()
#define TES_TRIANGLES_E(server, ...) tes::noopohm()
#define TES_TRIANGLES_N(server, ...) tes::noopohm()
#define TES_TRIANGLES_NE(server, ...) tes::noopohm()
#define TES_TRIANGLES_W(server, ...) tes::noopohm()
#define TES_TRIANGLES_WE(server, ...) tes::noopohm()
#define TES_TRIANGLES_T(server, ...) tes::noopohm()
#define TES_TRIANGLES_TE(server, ...) tes::noopohm()
#define TES_TRIANGLE(server, ...) tes::noopohm()
#define TES_TRIANGLE_W(server, ...) tes::noopohm()
#define TES_TRIANGLE_T(server, ...) tes::noopohm()
#define TES_VOXELS(server, ...) tes::noopohm()

#define TES_ARROW_END(server, ...) tes::noopohm()
#define TES_BOX_END(server, ...) tes::noopohm()
#define TES_CAPSULE_END(server, ...) tes::noopohm()
#define TES_CONE_END(server, ...) tes::noopohm()
#define TES_CYLINDER_END(server, ...) tes::noopohm()
#define TES_LINES_END(server, ...) tes::noopohm()
#define TES_MESHSET_END(server, ...) tes::noopohm()
#define TES_PLANE_END(server, ...) tes::noopohm()
#define TES_POINTCLOUDSHAPE_END(server, ...) tes::noopohm()
#define TES_POINTS_END(server, ...) tes::noopohm()
#define TES_POSE_END(server, ...) tes::noopohm()
#define TES_VOXELS_END(server, ...) tes::noopohm()
#define TES_SPHERE_END(server, ...) tes::noopohm()
#define TES_STAR_END(server, ...) tes::noopohm()
#define TES_TEXT2D_END(server, ...) tes::noopohm()
#define TES_TEXT3D_END(server, ...) tes::noopohm()
#define TES_TRIANGLES_END(server, ...) tes::noopohm()
#define TES_TRIANGLE_END(server, ...) tes::noopohm()
#define TES_VOXELS_END(server, ...) tes::noopohm()

#define TES_POS_UPDATE(server, ...) tes::noopohm()
#define TES_ROT_UPDATE(server, ...) tes::noopohm()
#define TES_SCALE_UPDATE(server, ...) tes::noopohm()
#define TES_COLOUR_UPDATE(server, ...) tes::noopohm()
#define TES_COLOR_UPDATE(server, ...) tes::noopohm()
#define TES_POSROT_UPDATE(server, ...) tes::noopohm()
#define TES_POSSCALE_UPDATE(server, ...) tes::noopohm()
#define TES_ROTSCALE_UPDATE(server, ...) tes::noopohm()
#define TES_PRS_UPDATE(server, ...) tes::noopohm()
#define TES_PRC_UPDATE(server, ...) tes::noopohm()
#define TES_PSC_UPDATE(server, ...) tes::noopohm()
#define TES_RSC_UPDATE(server, ...) tes::noopohm()
#define TES_PRSC_UPDATE(server, ...) tes::noopohm()

#endif  // _3ESSERVERMACROS_H
